// iso c99: https://www.open-std.org/jtc1/sc22/wg14/www/docs/n1548.pdf

// i can parse this by matching `id=` or `id;` (type inference)
const x = ..
// and i can use it, since in c99 the type specifier must be explicit (fortunately)


// i want auto to be reused, 
auto x = ..

// so this will be a compiler error, suggesting to use `const x = ..` instead
// because `auto` would be used for type inferred variables and `const <id> =`
// for type inferred constants (constants may be constexprs if the initializer
// is constexpr, cxc calls them "meta values")
//
// about retro compatibility with implicit int `const x;`, `x` would be `int`
// well the standard of c99 says it has been removed; it wouldn't anyway;
const auto x = ..


// stdbool is available
// also
((char)x).to_string() // "a"
((uint8_t)x).to_string() // "97"
// we can do this since uint8_t and char are not compatible

// another thing:
// evaluate args in call in order (for the standard seems to be unspecified behavior)