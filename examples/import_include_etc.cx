// normal include method
#include "local.h"

// including a local header ONLY ONCE (that's why includo, instead of include)
// (despite the content of the header, even if it has no `#ifdef #define #endif`)
@includo "local.h";

// including only once from a package (this means
// that if the package is not locally installed
// it will be downloaded and cached)
@includo package("some_library");
@includo package("another_library/has_multiple_headers.h");

// downloads and caches the header
@includo require("https://github.com/raysan5/raylib/blob/master/src/raylib.h")

// shorthand for `@includo package("foo");`
@includo some;

// IM NOT SURE ABOUT IMPORT; PROBABLY IT WILL BE REJECTED
// INCLUDO DOES ALL THE NECESSARY, IT JUST MIXES IDENTIFIERS

// ????
@import "local.h" lib;
@import package("some_library") lib2;
@import some_library; // short hand for `@import package("somelib") somelib;`

@test "lib" {
    int x = lib.foo();
}
// ????